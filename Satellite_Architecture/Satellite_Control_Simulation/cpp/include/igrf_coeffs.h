// igrf_coeffs.h
#pragma once

// IGRF coefficients for epoch 1900.0 (Schmidt‐semi‐normalized, units in nanotesla).
// Source: igrfcoefs.mat -> coefs.g / coefs.h (degrees 1..10, orders 0..n).
//
// Indexing convention: gnm[n][m] corresponds to g_n,m (and hnm[n][m] to h_n,m).
//   - n = 0..IGRF_MAX_N  (we leave row 0 unused / set to 0.0)
//   - m = 0..IGRF_MAX_N  (we zero out entries m>n)
//
// Epoch: 1900 (year 1900.0). If you need interpolation between epochs, you can
// store multiple such headers or build a more elaborate data structure.

constexpr int IGRF_MAX_N = 10;   // maximum degree
constexpr int IGRF_MAX_M = 10;   // maximum order (same as degree here)
constexpr int IGRF_EPOCH  = 1900; // epoch year

static constexpr double gnm[IGRF_MAX_N+1][IGRF_MAX_M+1] = {
    // n = 0 (unused / zeros)
    {  0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0 },
    // n = 1
    { -31543.0,  -2298.0,     0.0,     0.0,     0.0,     0.0,     0.0,     0.0,     0.0,     0.0,     0.0 },
    // n = 2
    {  -677.0,   2905.0,   924.0,     0.0,     0.0,     0.0,     0.0,     0.0,     0.0,     0.0,     0.0 },
    // n = 3
    {  1022.0,  -1469.0,  1256.0,   572.0,     0.0,     0.0,     0.0,     0.0,     0.0,     0.0,     0.0 },
    // n = 4
    {   876.0,    628.0,   660.0,  -361.0,   134.0,     0.0,     0.0,     0.0,     0.0,     0.0,     0.0 },
    // n = 5
    {  -184.0,    328.0,   264.0,     5.0,   -86.0,   -16.0,     0.0,     0.0,     0.0,     0.0,     0.0 },
    // n = 6
    {    63.0,     61.0,   -11.0,  -217.0,   -58.0,    59.0,   -90.0,     0.0,     0.0,     0.0,     0.0 },
    // n = 7
    {    70.0,    -55.0,     0.0,    34.0,   -41.0,   -21.0,    18.0,     6.0,     0.0,     0.0,     0.0 },
    // n = 8
    {    11.0,      8.0,    -4.0,    -9.0,     1.0,     2.0,    -9.0,     5.0,     8.0,     0.0,     0.0 },
    // n = 9
    {     8.0,     10.0,     1.0,   -11.0,    12.0,     1.0,    -2.0,     2.0,    -1.0,    -1.0,     0.0 },
    // n = 10
    {    -3.0,     -4.0,     2.0,    -5.0,    -2.0,     6.0,     4.0,     0.0,     2.0,     2.0,     0.0 }
};

static constexpr double hnm[IGRF_MAX_N+1][IGRF_MAX_M+1] = {
    // n = 0 (unused / zeros)
    {   0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0 },
    // n = 1
    {   0.0,   5922.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0 },
    // n = 2
    {   0.0,  -1061.0,  1121.0,   0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0 },
    // n = 3
    {   0.0,   -330.0,     3.0,  523.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0 },
    // n = 4
    {   0.0,    195.0,   -69.0,  -210.0,  -75.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0 },
    // n = 5
    {   0.0,   -210.0,    53.0,   -33.0,  -124.0,    3.0,    0.0,    0.0,    0.0,    0.0,    0.0 },
    // n = 6
    {   0.0,     -9.0,    83.0,    2.0,   -35.0,   36.0,   -69.0,    0.0,    0.0,    0.0,    0.0 },
    // n = 7
    {   0.0,    -45.0,   -13.0,   -10.0,    -1.0,   28.0,   -12.0,  -22.0,    0.0,    0.0,    0.0 },
    // n = 8
    {   0.0,      8.0,   -14.0,     7.0,   -13.0,    5.0,    16.0,   -5.0,  -18.0,    0.0,    0.0 },
    // n = 9
    {   0.0,    -20.0,    14.0,     5.0,    -3.0,   -2.0,     8.0,   10.0,    -2.0,    2.0,    0.0 },
    // n = 10
    {   0.0,      2.0,     1.0,     2.0,     6.0,   -4.0,     0.0,   -2.0,     4.0,    0.0,   -6.0 }
};
